[{"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\index.jsx":"1","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\i18n.js":"2","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\routes.jsx":"3","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\Common\\Notify.jsx":"4","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\index.js":"5","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\index.js":"6","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Utility\\pages-404.js":"7","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\actions.js":"8","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Login.jsx":"9","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\UserProfile.jsx":"10","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Register.jsx":"11","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\ForgetPassword.jsx":"12","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\PasswordRecovery.jsx":"13","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Channels\\GettingStarted.jsx":"14","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Channels\\ChannelSettings.jsx":"15","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Content.jsx":"16","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Channels\\CreateChannel.jsx":"17","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\reducers.js":"18","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\index.js":"19","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\index.js":"20","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\WelcomeComp.js":"21","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ActivityComp.js":"22","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\MonthlyEarning.js":"23","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\StackedColumnChart.js":"24","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\TopCities.js":"25","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\LatestTranaction.js":"26","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\SocialSource.js":"27","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\Common\\Breadcrumb.js":"28","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\common\\actions.js":"29","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\authorization\\actions.js":"30","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\channels\\actions.js":"31","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\profile\\actions.js":"32","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\playlists\\actions.js":"33","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\videos\\actions.js":"34","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\languages\\actions.js":"35","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\layout\\actions.js":"36","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\index.js":"37","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\validation.js":"38","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\layout\\reducer.js":"39","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\languages.js":"40","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\videos.js":"41","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\channels.js":"42","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\playlists.js":"43","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\authorization.js":"44","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\profile.js":"45","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\layout\\saga.js":"46","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Channels\\DeleteChannelDialog.jsx":"47","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\TabButton\\TabButton.jsx":"48","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\TabPanel.jsx":"49","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Upload\\Upload.jsx":"50","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Footer.js":"51","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Navbar.js":"52","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\Rightbar.js":"53","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ApexRadial.js":"54","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Header.jsx":"55","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\languages\\index.js":"56","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\layout\\actionTypes.js":"57","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\playlists\\index.js":"58","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\channels\\index.js":"59","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\videos\\index.js":"60","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\profile\\index.js":"61","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\common\\index.js":"62","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\authorization\\index.js":"63","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\CheckItems.jsx":"64","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\CreateEdit.jsx":"65","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\DeleteModal.jsx":"66","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\EmptyMessage.jsx":"67","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Pagination\\Pagination.jsx":"68","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\ButtonsAPI\\ButtonsAPIVideo.jsx":"69","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\ButtonsAPI\\ButtonsAPIPlaylist.jsx":"70","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\authorization\\index.js":"71","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\profile\\index.js":"72","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\common\\index.js":"73","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\languages\\index.js":"74","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\videos\\index.js":"75","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\playlists\\index.js":"76","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\channels\\index.js":"77","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\index.js":"78","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js":"79","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.jsx":"80","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\sha1.js":"81","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\FormaData.jsx":"82","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\LanguagesTabs.jsx":"83","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\videos.js":"84","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\languages.js":"85","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\playlists.js":"86","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\profile.js":"87","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\channels.js":"88","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\authorization.js":"89","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\loader.js":"90"},{"size":386,"mtime":1609424463073,"results":"91","hashOfConfig":"92"},{"size":1127,"mtime":1609424463073,"results":"93","hashOfConfig":"92"},{"size":2832,"mtime":1609424463098,"results":"94","hashOfConfig":"92"},{"size":1675,"mtime":1609424463059,"results":"95","hashOfConfig":"92"},{"size":478,"mtime":1609402247665,"results":"96","hashOfConfig":"92"},{"size":6580,"mtime":1609424463096,"results":"97","hashOfConfig":"92"},{"size":1626,"mtime":1609424463097,"results":"98","hashOfConfig":"92"},{"size":457,"mtime":1609413847736,"results":"99","hashOfConfig":"92"},{"size":3979,"mtime":1609424463078,"results":"100","hashOfConfig":"92"},{"size":3090,"mtime":1609424463079,"results":"101","hashOfConfig":"92"},{"size":4993,"mtime":1609424463079,"results":"102","hashOfConfig":"92"},{"size":3978,"mtime":1609424463077,"results":"103","hashOfConfig":"92"},{"size":4462,"mtime":1609424463078,"results":"104","hashOfConfig":"92"},{"size":4158,"mtime":1609402247641,"results":"105","hashOfConfig":"92"},{"size":10890,"mtime":1609756354441,"results":"106","hashOfConfig":"92"},{"size":12110,"mtime":1609753182464,"results":"107","hashOfConfig":"92"},{"size":2905,"mtime":1609402247640,"results":"108","hashOfConfig":"92"},{"size":527,"mtime":1609413715627,"results":"109","hashOfConfig":"92"},{"size":3120,"mtime":1609414578395,"results":"110","hashOfConfig":"92"},{"size":2980,"mtime":1609424463065,"results":"111","hashOfConfig":"92"},{"size":2911,"mtime":1609424463095,"results":"112","hashOfConfig":"92"},{"size":4787,"mtime":1609424463091,"results":"113","hashOfConfig":"92"},{"size":1564,"mtime":1609424463093,"results":"114","hashOfConfig":"92"},{"size":1978,"mtime":1609424463094,"results":"115","hashOfConfig":"92"},{"size":3136,"mtime":1609424463094,"results":"116","hashOfConfig":"92"},{"size":5920,"mtime":1609424463093,"results":"117","hashOfConfig":"92"},{"size":3023,"mtime":1609424463094,"results":"118","hashOfConfig":"92"},{"size":1007,"mtime":1609424463058,"results":"119","hashOfConfig":"92"},{"size":482,"mtime":1609752868214,"results":"120","hashOfConfig":"92"},{"size":2147,"mtime":1609402247664,"results":"121","hashOfConfig":"92"},{"size":1240,"mtime":1609402247664,"results":"122","hashOfConfig":"92"},{"size":798,"mtime":1609402247669,"results":"123","hashOfConfig":"92"},{"size":1489,"mtime":1609410721957,"results":"124","hashOfConfig":"92"},{"size":1625,"mtime":1609402247670,"results":"125","hashOfConfig":"92"},{"size":965,"mtime":1609414370430,"results":"126","hashOfConfig":"92"},{"size":1176,"mtime":1609402247667,"results":"127","hashOfConfig":"92"},{"size":376,"mtime":1609413447823,"results":"128","hashOfConfig":"92"},{"size":156,"mtime":1609402247632,"results":"129","hashOfConfig":"92"},{"size":1533,"mtime":1609402247667,"results":"130","hashOfConfig":"92"},{"size":1469,"mtime":1609414646622,"results":"131","hashOfConfig":"92"},{"size":2784,"mtime":1609402247659,"results":"132","hashOfConfig":"92"},{"size":2594,"mtime":1609402247657,"results":"133","hashOfConfig":"92"},{"size":3423,"mtime":1609402247658,"results":"134","hashOfConfig":"92"},{"size":2280,"mtime":1609402247657,"results":"135","hashOfConfig":"92"},{"size":1252,"mtime":1609402247658,"results":"136","hashOfConfig":"92"},{"size":4350,"mtime":1609402247668,"results":"137","hashOfConfig":"92"},{"size":1125,"mtime":1609402247641,"results":"138","hashOfConfig":"92"},{"size":1474,"mtime":1609424463090,"results":"139","hashOfConfig":"92"},{"size":7935,"mtime":1609755734602,"results":"140","hashOfConfig":"92"},{"size":606,"mtime":1609424463091,"results":"141","hashOfConfig":"92"},{"size":493,"mtime":1609424463063,"results":"142","hashOfConfig":"92"},{"size":18856,"mtime":1609424463065,"results":"143","hashOfConfig":"92"},{"size":11001,"mtime":1609424463060,"results":"144","hashOfConfig":"92"},{"size":1975,"mtime":1609424463092,"results":"145","hashOfConfig":"92"},{"size":6893,"mtime":1609424463064,"results":"146","hashOfConfig":"92"},{"size":657,"mtime":1609754116731,"results":"147","hashOfConfig":"92"},{"size":578,"mtime":1609402247667,"results":"148","hashOfConfig":"92"},{"size":642,"mtime":1609412580453,"results":"149","hashOfConfig":"92"},{"size":737,"mtime":1609402247665,"results":"150","hashOfConfig":"92"},{"size":781,"mtime":1609402247670,"results":"151","hashOfConfig":"92"},{"size":471,"mtime":1609402247669,"results":"152","hashOfConfig":"92"},{"size":671,"mtime":1609753245206,"results":"153","hashOfConfig":"92"},{"size":583,"mtime":1609402247664,"results":"154","hashOfConfig":"92"},{"size":6878,"mtime":1609424463085,"results":"155","hashOfConfig":"92"},{"size":6222,"mtime":1609424463086,"results":"156","hashOfConfig":"92"},{"size":2140,"mtime":1609424463086,"results":"157","hashOfConfig":"92"},{"size":1069,"mtime":1609424463087,"results":"158","hashOfConfig":"92"},{"size":1570,"mtime":1609424463089,"results":"159","hashOfConfig":"92"},{"size":3169,"mtime":1609424463084,"results":"160","hashOfConfig":"92"},{"size":1388,"mtime":1609424463084,"results":"161","hashOfConfig":"92"},{"size":286,"mtime":1609402247660,"results":"162","hashOfConfig":"92"},{"size":262,"mtime":1609402247662,"results":"163","hashOfConfig":"92"},{"size":624,"mtime":1609753020699,"results":"164","hashOfConfig":"92"},{"size":281,"mtime":1609413128431,"results":"165","hashOfConfig":"92"},{"size":593,"mtime":1609402247663,"results":"166","hashOfConfig":"92"},{"size":443,"mtime":1609413139830,"results":"167","hashOfConfig":"92"},{"size":491,"mtime":1609402247660,"results":"168","hashOfConfig":"92"},{"size":496,"mtime":1609409755465,"results":"169","hashOfConfig":"92"},{"size":3525,"mtime":1609424463060,"results":"170","hashOfConfig":"92"},{"size":2655,"mtime":1609424463062,"results":"171","hashOfConfig":"92"},{"size":3993,"mtime":1609402247631,"results":"172","hashOfConfig":"92"},{"size":1883,"mtime":1609424463087,"results":"173","hashOfConfig":"92"},{"size":1788,"mtime":1609424463088,"results":"174","hashOfConfig":"92"},{"size":6179,"mtime":1609402247631,"results":"175","hashOfConfig":"92"},{"size":2040,"mtime":1609755002370,"results":"176","hashOfConfig":"92"},{"size":4365,"mtime":1609755379889,"results":"177","hashOfConfig":"92"},{"size":1883,"mtime":1609402247631,"results":"178","hashOfConfig":"92"},{"size":3655,"mtime":1609755050123,"results":"179","hashOfConfig":"92"},{"size":1658,"mtime":1609402247629,"results":"180","hashOfConfig":"92"},{"size":209,"mtime":1609752308850,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"1y7i1hg",{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"184"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"184"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"184"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"184"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"184"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"184"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"184"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"184"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"184"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"184"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"184"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"184"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"184"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"184"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"325","usedDeprecatedRules":"184"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"184"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"184"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"184"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"184"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"184"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"184"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"184"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"184"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"184"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"184"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\index.jsx",[],["388","389"],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\i18n.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\routes.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\Common\\Notify.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\index.js",["390","391","392"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport StackedColumnChart from \"./StackedColumnChart\";\r\nimport modalimage1 from \"../../assets/images/product/img-7.png\";\r\nimport modalimage2 from \"../../assets/images/product/img-4.png\";\r\nimport WelcomeComp from \"./WelcomeComp\";\r\nimport MonthlyEarning from \"./MonthlyEarning\";\r\nimport SocialSource from \"./SocialSource\";\r\nimport ActivityComp from \"./ActivityComp\";\r\nimport TopCities from \"./TopCities\";\r\nimport LatestTranaction from \"./LatestTranaction\";\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport selectors from '../../selectors';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n\tButton,\r\n\tCard,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter,\r\n\tMedia,\r\n\tTable,\r\n} from \"reactstrap\";\r\n\r\nconst Dashboard = (props) => {\r\n\tconst { channels, history } = props\r\n\tconst [modal, setmodal] = useState(false);\r\n\r\n\tconst reports = [\r\n\t\t{ title: \"Orders\", iconClass: \"bx-copy-alt\", description: \"1,235\" },\r\n\t\t{ title: \"Revenue\", iconClass: \"bx-archive-in\", description: \"$35, 723\" },\r\n\t\t{ title: \"Average Price\", iconClass: \"bx-purchase-tag-alt\", description: \"$16.2\" }\r\n\t];\r\n\tconst email = [\r\n\t\t{ title: \"Week\", linkto: \"#\", isActive: false },\r\n\t\t{ title: \"Month\", linkto: \"#\", isActive: false },\r\n\t\t{ title: \"Year\", linkto: \"#\", isActive: true }\r\n\t];\r\n\r\n\tconst lastLocation = useLastLocation()\r\n\tconst lastLoactionPathname = lastLocation?.pathname\r\n\r\n\tuseEffect(()=>{\r\n\t\t\r\n\t\tif (lastLoactionPathname === '/login' || lastLoactionPathname === '/' && channels?.length === 0) {\r\n\t\t\thistory.push('/channels/create')\r\n\t\t}\r\n\t}, [channels])\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Container fluid>\r\n\r\n\t\t\t\t\t{/* Render Breadcrumb */}\r\n\t\t\t\t\t<Breadcrumbs title={props.t('Dashboard')} breadcrumbItem={props.t('Dashboard')} />\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<WelcomeComp />\r\n\t\t\t\t\t\t\t<MonthlyEarning />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl=\"8\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t{/* Reports Render */}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treports.map((report, key) =>\r\n\t\t\t\t\t\t\t\t\t\t<Col md=\"4\" key={\"_col_\" + key}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className=\"mini-stats-wid\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Media body>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted font-weight-medium\">{report.title}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{report.description}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mini-stat-icon avatar-sm rounded-circle bg-primary align-self-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"avatar-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className={\"bx \" + report.iconClass + \" font-size-24\"}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<CardTitle className=\"mb-4 float-sm-left\">\r\n\t\t\t\t\t\t\t\t\t\tEmail Sent\r\n                                        </CardTitle>\r\n\t\t\t\t\t\t\t\t\t<div className=\"float-sm-right\">\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"nav nav-pills\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\temail.map((mail, key) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\" key={\"_li_\" + key}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={mail.isActive ? \"nav-link active\" : \"nav-link\"} to={mail.linkto}>{mail.title}</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\r\n\t\t\t\t\t\t\t\t\t<StackedColumnChart />\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<SocialSource />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<ActivityComp />\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<TopCities />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg=\"12\">\r\n\t\t\t\t\t\t\t<LatestTranaction />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t\t<Modal isOpen={modal} role=\"dialog\" autoFocus={true} centered={true} className=\"exampleModal\" tabindex=\"-1\" toggle={() => { setmodal(!modal); }}>\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<ModalHeader toggle={() => { setmodal(!modal); }}>\r\n\t\t\t\t\t\tOrder Details\r\n                        </ModalHeader >\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<p className=\"mb-2\">Product id: <span className=\"text-primary\">#SK2540</span></p>\r\n\t\t\t\t\t\t<p className=\"mb-4\">Billing Name: <span className=\"text-primary\">Neal Matthews</span></p>\r\n\r\n\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t<Table className=\"table table-centered table-nowrap\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product Name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Price</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={modalimage1} alt=\"\" className=\"avatar-sm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-truncate font-size-14\">Wireless Headphone (Black)</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted mb-0\">$ 225 x 1</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 255</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={modalimage2} alt=\"\" className=\"avatar-sm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-truncate font-size-14\">Hoodie (Blue)</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted mb-0\">$ 145 x 1</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 145</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Sub Total:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 400</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Shipping:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Free</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Total:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 400</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button type=\"button\" color=\"secondary\" onClick={() => { setmodal(!modal); }}>Close</Button>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n\treturn {\r\n\t\tchannels: selectors.channels.channels(state),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStatetoProps)(withNamespaces()(Dashboard));","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Utility\\pages-404.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\actions.js",["393"],"import authorization from './authorization/actions'\r\nimport common from './common/actions'\r\nimport profile from './profile/actions'\r\nimport channels from './channels/actions'\r\nimport playlists from './playlists/actions'\r\nimport videos from './videos/actions'\r\nimport languages from './languages/actions'\r\n\r\nexport * from './layout/actions';\r\n\r\nexport default {\r\n  authorization,\r\n  common,\r\n  profile,\r\n  channels,\r\n  playlists,\r\n  videos,\r\n  languages\r\n}\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Login.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\UserProfile.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Register.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\ForgetPassword.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\PasswordRecovery.jsx",["394"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Alert, Card, CardBody, Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport profile from \"../../assets/images/profile-img.png\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport Actions from '../../store/actions'\r\nimport selectors from './../../selectors'\r\n\r\nconst ForgetPasswordPage = React.memo((props) => {\r\n  const { history, onSendNewPassword, successMessage, errorMessage } = props\r\n  const [isSent, setSentStatus] = useState(null)\r\n  const [responseMessage, setResponseMessage] = useState('')\r\n\r\n  const path = history.location.pathname.split('/');\r\n  const hash = path[path.length - 1];\r\n\r\n  useEffect(() => {\r\n    if (hash && isSent === null) {\r\n      onSendNewPassword({\"hash\": hash})\r\n      setSentStatus(true)\r\n    }\r\n\r\n    if (successMessage || errorMessage) {\r\n      setResponseMessage(successMessage || errorMessage)\r\n      setSentStatus(false)\r\n    }\r\n  }, [successMessage, errorMessage])\r\n\r\n  const renderCurrentMessage = () => {\r\n    if (isSent === true) {\r\n      return (\r\n        <div className=\"text-center mb-4\">\r\n          <span className=\"mr-1\">Please wait</span>\r\n          <i className=\"bx bx-loader bx-spin font-size-16 align-middle mr-2\"></i>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (isSent === false) {\r\n      return (\r\n        <div className=\"text-center mb-4\">\r\n          <span className=\"mr-1\">{responseMessage}</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"home-btn d-none d-sm-block\">\r\n        <Link to=\"/\" className=\"text-dark\"><i className=\"fas fa-home h2\"></i></Link>\r\n      </div>\r\n      <div className=\"account-pages my-5 pt-sm-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={8} lg={6} xl={5}>\r\n              <Card className=\"overflow-hidden\">\r\n                <div className=\"bg-soft-primary\">\r\n                  <Row>\r\n                    <Col className=\"col-7\">\r\n                      <div className=\"text-primary p-4\">\r\n                        <h5 className=\"text-primary\">Welcome Back !</h5>\r\n                        <p>Sign in to continue to Bring Stream.</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"col-5 align-self-end\">\r\n                      <img src={profile} alt=\"\" className=\"img-fluid\" />\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <CardBody className=\"pt-0\">\r\n                  <div>\r\n                    <Link to=\"/\">\r\n                      <div className=\"avatar-md profile-user-wid mb-4\">\r\n                        <span className=\"avatar-title rounded-circle bg-light\">\r\n                          <img src={logo} alt=\"\" className=\"rounded-circle\" height=\"34\" />\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"p-2\">\r\n                    {props.forgetError && props.forgetError ? (\r\n                      <Alert color=\"danger\" style={{ marginTop: \"13px\" }}>\r\n                        {props.forgetError}\r\n                      </Alert>\r\n                    ) : null}\r\n                    {props.forgetSuccessMsg ? (\r\n                      <Alert color=\"success\" style={{ marginTop: \"13px\" }}>\r\n                        {props.forgetSuccessMsg}\r\n                      </Alert>\r\n                    ) : null}\r\n                    {renderCurrentMessage()}\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n              <div className=\"mt-5 text-center\">\r\n                <p> Go back to <Link to=\"/login\" className=\"font-weight-medium text-primary\">Login</Link></p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMessage: selectors.common.errorMessage(state),\r\n  successMessage: selectors.common.successMessage(state),\r\n})\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n  onForgotPassword: (data) => dispatch(Actions.authorization.forgotPasswordRequest(data)),\r\n  onSendNewPassword: (value) => dispatch(Actions.authorization.sendNewPasswordRequest(value)),\r\n})\r\n\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispathcToProps)(ForgetPasswordPage)\r\n);\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Channels\\GettingStarted.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Channels\\ChannelSettings.jsx",["395","396"],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Content.jsx",["397"],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Channels\\CreateChannel.jsx",["398"],"import React, { useEffect, useState } from 'react';\r\nimport { CardBody, CardTitle, Button, Container } from 'reactstrap';\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../store/actions'\r\nimport selectors from './../../selectors/index'\r\nimport { validate } from './../../helpers/validation'\r\nimport \"./channels.scss\";\r\n\r\nconst CreateChannel = (props) => {\r\n\t\r\n\tconst { \r\n\t\tonAddChannel, \r\n\t\terrorMessgae, \r\n\t\thistory, \r\n\t\tisChannelAddedSuccessfuly,\r\n\t\tresetIsChannelAddedValue,\r\n\t } = props\r\n\t \r\n\tconst [isSent, setSentStatus] = useState(false)\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetSentStatus(false)\r\n\r\n\t\tif(isChannelAddedSuccessfuly){\r\n\t\t\thistory.push('/channels/getting-started')\r\n\t\t\tresetIsChannelAddedValue()\r\n\t\t}\r\n\t\t\r\n\t}, [errorMessgae, isChannelAddedSuccessfuly])\r\n\r\n\tconst customValidation = value => validate.isChannelNameValid(value) ? true : `The field must not contain spaces.`;\r\n\r\n\tfunction onFormSubmit(event, values) {\r\n\r\n\t\tif(!validate.isChannelNameValid(values.name)) return\r\n\r\n\t\tconst data = {\r\n\t\t\tname: values.name,\r\n\t\t\tsubdomain: values.name.replace(/\\s/g, ''),\r\n\t\t}\r\n\r\n\t\tsetSentStatus(true)\r\n\t\tonAddChannel(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Breadcrumbs\r\n\t\t\t\t\t\ttitle={\"dashboard\"}\r\n\t\t\t\t\t\tbreadcrumbItem={\"create a new project\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"overlay\">\r\n\t\t\t\t\t\t<div className=\"create-form\">\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<CardTitle className=\"text-center mb-3\">What's the name of your project?</CardTitle>\r\n\t\t\t\t\t\t\t\t<AvForm onValidSubmit={(e, v) => { onFormSubmit(e, v) }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<AvField\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Your film, show, company name. You can change this later\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tvalidate={{customValidation}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"mt-1 waves-effect waves-light\" color=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\t{isSent && <i className=\"bx bx-loader bx-spin font-size-16 align-middle mr-2\"></i>}\r\n\t\t\t\t\t\t\t\t\t\tCreate Project\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</AvForm>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\terrorMessgae: selectors.common.errorMessage(state),\r\n\tisChannelAddedSuccessfuly: selectors.channels.isChannelAddedSuccessfuly(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonAddChannel: (data) => dispatch(Actions.channels.addChannelRequest(data)),\r\n\tresetIsChannelAddedValue: () => dispatch(Actions.channels.addChannelSucces(false)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withNamespaces()(CreateChannel));\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\reducers.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\WelcomeComp.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ActivityComp.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\MonthlyEarning.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\StackedColumnChart.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\TopCities.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\LatestTranaction.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\SocialSource.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\Common\\Breadcrumb.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\common\\actions.js",["399"],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\authorization\\actions.js",["400"],"\r\nexport const Types = {\r\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  \r\n  REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST',\r\n  REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS',\r\n  \r\n  FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST',\r\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\r\n\r\n  SEND_NEW_PASSAWORD_REQUEST: 'SEND_NEW_PASSAWORD_REQUEST',\r\n  SEND_NEW_PASSAWORD_SUCCESS: 'SEND_NEW_PASSAWORD_SUCCESS',\r\n\r\n  LOG_OUT: 'LOG_OUT',\r\n\r\n  GET_USER_PROFILE_REQUEST: 'GET_USER_PROFILE_REQUEST',\r\n  GET_USER_PROFILE_SUCCESS: 'GET_USER_PROFILE_SUCCESS',\r\n  \r\n  CHANGE_USER_PROFILE_REQUEST: 'CHANGE_USER_PROFILE_REQUEST',\r\n  CHANGE_USER_PROFILE_SUCCESS: 'CHANGE_USER_PROFILE_SUCCESS',\r\n}\r\n\r\nconst loginRequest = (payload) => ({\r\n  type: Types.LOGIN_REQUEST,\r\n  payload\r\n})\r\n\r\nconst loginSucces = (payload) => ({\r\n  type: Types.LOGIN_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst registerUserRequest = (payload) => ({\r\n  type: Types.REGISTER_USER_REQUEST,\r\n  payload\r\n})\r\n\r\nconst registerUserSucces = (payload) => ({\r\n  type: Types.REGISTER_USER_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst forgotPasswordRequest = (payload) => ({\r\n  type: Types.FORGOT_PASSWORD_REQUEST,\r\n  payload\r\n})\r\n\r\nconst forgotPasswordSuccess = (payload) => ({\r\n  type: Types.FORGOT_PASSWORD_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst logOut = () => ({\r\n  type: Types.LOG_OUT\r\n})\r\n\r\nconst getUserProfileRequest = () => ({\r\n  type: Types.GET_USER_PROFILE_REQUEST,\r\n})\r\n\r\nconst getUserProfileSucces = (payload) => ({\r\n  type: Types.GET_USER_PROFILE_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileRequest = (payload) => ({\r\n  type: Types.CHANGE_USER_PROFILE_REQUEST,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileSucces = () => ({\r\n  type: Types.CHANGE_USER_PROFILE_SUCCESS,\r\n})\r\n\r\nconst sendNewPasswordRequest = (payload) => ({\r\n  type: Types.SEND_NEW_PASSAWORD_REQUEST,\r\n  payload\r\n})\r\n\r\n\r\nexport default {\r\n  loginRequest,\r\n  loginSucces,\r\n  registerUserRequest,\r\n  registerUserSucces,\r\n  forgotPasswordRequest,\r\n  forgotPasswordSuccess,\r\n  logOut,\r\n  getUserProfileRequest,\r\n  getUserProfileSucces,\r\n  changeUserProfileRequest,\r\n  changeUserProfileSucces,\r\n  sendNewPasswordRequest,\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\channels\\actions.js",["401"],"\r\nexport const Types = {\r\n  ADD_CHANNEL_REQUEST: 'ADD_CHANNEL_REQUEST',\r\n  ADD_CHANNEL_SUCCESS: 'ADD_CHANNEL_SUCCESS',\r\n  \r\n  GET_CHANNELS_REQUEST: 'GET_CHANNELS_REQUEST',\r\n  GET_CHANNELS_SUCCESS: 'GET_CHANNELS_SUCCESS',\r\n  \r\n  SET_ACTIVE_CHANNEL: 'SET_ACTIVE_CHANNEL',\r\n  \r\n  DELETE_CHANNEL_REQUEST: 'DELETE_CHANNEL_REQUEST',\r\n\r\n  UPDATE_CHANNEL_REQUEST: 'UPDATE_CHANNEL_REQUEST',\r\n}\r\n\r\nconst addChannelRequest = (payload) => ({\r\n  type: Types.ADD_CHANNEL_REQUEST,\r\n  payload\r\n})\r\n\r\nconst addChannelSucces = (payload) => ({\r\n  type: Types.ADD_CHANNEL_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst getChannelsRequest = () => ({\r\n  type: Types.GET_CHANNELS_REQUEST,\r\n})\r\n\r\nconst getChannelsSuccess = (payload) => ({\r\n  type: Types.GET_CHANNELS_SUCCESS,\r\n  payload,\r\n})\r\n\r\nconst setActiveChannel = (payload) => ({\r\n  type: Types.SET_ACTIVE_CHANNEL,\r\n  payload,\r\n})\r\n\r\nconst deleteChannelRequest = (payload) => ({\r\n  type: Types.DELETE_CHANNEL_REQUEST,\r\n  payload,\r\n})\r\n\r\nconst updateChannelRequest = (payload) => ({\r\n  type: Types.UPDATE_CHANNEL_REQUEST,\r\n  payload,\r\n})\r\n\r\n\r\nexport default {\r\n  addChannelRequest,\r\n  addChannelSucces,\r\n  getChannelsRequest,\r\n  getChannelsSuccess,\r\n  setActiveChannel,\r\n  deleteChannelRequest,\r\n  updateChannelRequest,\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\profile\\actions.js",["402"],"\r\nexport const Types = {\r\n  GET_USER_PROFILE_REQUEST: 'GET_USER_PROFILE_REQUEST',\r\n  GET_USER_PROFILE_SUCCESS: 'GET_USER_PROFILE_SUCCESS',\r\n  \r\n  CHANGE_USER_PROFILE_REQUEST: 'CHANGE_USER_PROFILE_REQUEST',\r\n  CHANGE_USER_PROFILE_SUCCESS: 'CHANGE_USER_PROFILE_SUCCESS',\r\n}\r\n\r\nconst getUserProfileRequest = () => ({\r\n  type: Types.GET_USER_PROFILE_REQUEST,\r\n})\r\n\r\nconst getUserProfileSucces = (payload) => ({\r\n  type: Types.GET_USER_PROFILE_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileRequest = (payload) => ({\r\n  type: Types.CHANGE_USER_PROFILE_REQUEST,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileSucces = () => ({\r\n  type: Types.CHANGE_USER_PROFILE_SUCCESS,\r\n})\r\n\r\n\r\nexport default {\r\n  getUserProfileRequest,\r\n  getUserProfileSucces,\r\n  changeUserProfileRequest,\r\n  changeUserProfileSucces,\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\playlists\\actions.js",["403"],"export const Types = {\r\n  ADD_PLAYLIST_REQUEST: \"ADD_PLAYLIST_REQUEST\",\r\n  ADD_PLAYLIST_SUCCESS: \"ADD_PLAYLIST_SUCCESS\",\r\n\r\n  GET_PLAYLISTS_REQUEST: \"GET_PLAYLISTS_REQUEST\",\r\n  GET_PLAYLISTS_SUCCESS: \"GET_PLAYLISTS_SUCCESS\",\r\n\r\n  GET_ONE_PLAYLIST_REQUEST: \"GET_ONE_PLAYLIST_REQUEST\",\r\n  GET_ONE_PLAYLIST_SUCCESS: \"GET_ONE_PLAYLIST_SUCCESS\",\r\n\r\n  DELETE_PLAYLIST_REQUEST: \"DELETE_PLAYLIST_REQUEST\",\r\n\r\n  UPDATE_PLAYLIST_REQUEST: \"UPDATE_PLAYLIST_REQUEST\",\r\n};\r\n\r\nconst addPlaylistRequest = (payload) => ({\r\n  type: Types.ADD_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst addPlaylistSuccess = () => ({\r\n  type: Types.ADD_PLAYLIST_SUCCESS,\r\n});\r\n\r\nconst getPlaylistsRequest = (payload) => ({\r\n  type: Types.GET_PLAYLISTS_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst getPlaylistsSuccess = (payload) => ({\r\n  type: Types.GET_PLAYLISTS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst getOnePlaylistRequest = (payload) => ({\r\n  type: Types.GET_ONE_PLAYLIST_REQUEST,\r\n  payload\r\n})\r\n\r\nconst getOnePlaylistSuccess = (payload) => ({\r\n  type: Types.GET_ONE_PLAYLIST_REQUEST,\r\n  payload\r\n})\r\n\r\nconst deletePlaylistRequest = (payload) => ({\r\n  type: Types.DELETE_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst updatePlaylistRequest = (payload) => ({\r\n  type: Types.UPDATE_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport default {\r\n  addPlaylistRequest,\r\n  addPlaylistSuccess,\r\n  getPlaylistsRequest,\r\n  getPlaylistsSuccess,\r\n  getOnePlaylistRequest,\r\n  getOnePlaylistSuccess,\r\n  deletePlaylistRequest,\r\n  updatePlaylistRequest,\r\n};\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\videos\\actions.js",["404"],"export const Types = {\r\n  ADD_VIDEO_TO_PLAYLIST_REQUEST: \"ADD_VIDEO_TO_PLAYLIST_REQUEST\",\r\n  ADD_VIDEO_TO_PLAYLIST_SUCCESS: \"ADD_VIDEO_TO_PLAYLIST_SUCCESS\",\r\n\r\n  GET_VIDEOS_REQUEST: \"GET_VIDEOS_REQUEST\",\r\n  GET_VIDEOS_SUCCESS: \"GET_VIDEOS_SUCCESS\",\r\n\r\n  GET_VIDEO_BY_PLAYLIST_REQUEST: \"GET_VIDEO_BY_PLAYLIST_REQUEST\",\r\n  GET_VIDEO_BY_PLAYLIST_SUCCESS: \"GET_VIDEO_BY_PLAYLIST_SUCCESS\",\r\n\r\n  REMOVE_VIDEO_FROM_PLAYLIST_REQUEST: \"REMOVE_VIDEO_FROM_PLAYLIST_REQUEST\",\r\n\r\n  UPDATE_VIDEO_REQUEST: \"UPDATE_VIDEO_REQUEST\",\r\n};\r\n\r\nconst addVideoToPlaylistRequest = (payload) => ({\r\n  type: Types.ADD_VIDEO_TO_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst addVideoToPlaylistSuccess = () => ({\r\n  type: Types.ADD_VIDEO_TO_PLAYLIST_SUCCESS,\r\n});\r\n\r\nconst getVideosRequest = (payload) => ({\r\n  type: Types.GET_VIDEOS_REQUEST,\r\n  payload\r\n});\r\n\r\nconst getVideosSuccess = (payload) => ({\r\n  type: Types.GET_VIDEOS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst getVideoByPlaylistRequest = (payload) => ({\r\n  type: Types.GET_VIDEO_BY_PLAYLIST_REQUEST,\r\n  payload\r\n});\r\n\r\nconst getVideoByPlaylistSuccess = (payload) => ({\r\n  type: Types.GET_VIDEO_BY_PLAYLIST_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst removeVideoFromPlaylistRequest = (payload) => ({\r\n  type: Types.REMOVE_VIDEO_FROM_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst updateVideoRequest = (payload) => ({\r\n  type: Types.UPDATE_VIDEO_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport default {\r\n  addVideoToPlaylistRequest,\r\n  addVideoToPlaylistSuccess,\r\n  getVideosRequest,\r\n  getVideosSuccess,\r\n  getVideoByPlaylistRequest,\r\n  getVideoByPlaylistSuccess,\r\n  removeVideoFromPlaylistRequest,\r\n  updateVideoRequest,\r\n};\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\languages\\actions.js",["405"],"export const Types = {\r\n    GET_CHANNEL_LANGUAGES_REQUEST: \"GET_CHANNEL_LANGUAGES_REQUEST\",\r\n    GET_CHANNEL_LANGUAGES_SUCCESS: \"GET_CHANNEL_LANGUAGES_SUCCESS\",\r\n\r\n    UPDATE_CHANNEL_LANGUAGES_REQUEST: \"UPDATE_CHANNEL_LANGUAGES_REQUEST\",\r\n    UPDATE_CHANNEL_LANGUAGES_SUCCESS: \"UPDATE_CHANNEL_LANGUAGES_SUCCESS\"\r\n}\r\n\r\nconst getChannelLanguagesRequest = (payload) => ({\r\n    type: Types.GET_CHANNEL_LANGUAGES_REQUEST,\r\n    payload\r\n});\r\n\r\nconst getChannelLanguagesSuccess = (payload) => ({\r\n    type: Types.GET_CHANNEL_LANGUAGES_SUCCESS,\r\n    payload\r\n});\r\n\r\nconst updateChannelLanguagesRequest = (payload) => ({\r\n    type: Types.UPDATE_CHANNEL_LANGUAGES_REQUEST,\r\n    payload\r\n});\r\n\r\nconst updateChannelLanguagesSuccess = (payload) => ({\r\n    type: Types.UPDATE_CHANNEL_LANGUAGES_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport default {\r\n    getChannelLanguagesRequest,\r\n    getChannelLanguagesSuccess,\r\n    updateChannelLanguagesRequest,\r\n    updateChannelLanguagesSuccess\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\layout\\actions.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\index.js",["406"],"import authorization from './authorization'\r\nimport profile from './profile'\r\nimport common from './common'\r\nimport channels from './channels'\r\nimport playlists from './playlists'\r\nimport videos from './videos'\r\nimport languages from './languages'\r\n\r\nexport default {\r\n    authorization,\r\n    profile,\r\n    common,\r\n    channels,\r\n    playlists,\r\n    videos,\r\n    languages\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\validation.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\layout\\reducer.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\languages.js",["407","408"],"import {put} from 'redux-saga/effects';\r\nimport Actions from '../store/actions';\r\nimport { API } from \"../helpers/api\";\r\nimport { history } from \"./../routes\";\r\nimport selectors from \"./../selectors\";\r\n\r\nexport function* watchGetChannelLanguages(action) {\r\n      const response = yield API.languages.getChannelLanguages(action.payload);\r\n\r\n      if(response.status === 200) {\r\n          if(response.data.status === \"error\") {\r\n              yield put(\r\n                  Actions.common.setErrorNotify(response?.data?.message || \"Server error\")\r\n              ); \r\n          } else {\r\n              yield put(\r\n                  Actions.languages.getChannelLanguagesSuccess(response?.data)\r\n              );\r\n          } \r\n      } else {\r\n          yield put(Actions.common.setErrorNotify(response.status + \"Server error\"))\r\n      }\r\n}\r\n\r\nexport function* watchUpdateChannelLanguages(action) {\r\n    const response = yield API.languages.updateChannelLanguages(action.payload);\r\n    if(response.status === 200) {\r\n        if(response.data.status === \"error\") {\r\n            yield put(\r\n                Actions.common.setErrorNotify(response?.data?.message || \"Server error\")\r\n            )\r\n        } else {\r\n            yield put(\r\n                Actions.languages.updateChannelLanguagesSuccess(response?.data)\r\n            );\r\n        } \r\n    } else {\r\n        yield put(\r\n            Actions.common.setErrorNotify(response.status + \"Server error\")\r\n        )\r\n    }\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\videos.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\channels.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\playlists.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\authorization.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\sagas\\profile.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\layout\\saga.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Channels\\DeleteChannelDialog.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\TabButton\\TabButton.jsx",["409"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { Button, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nconst TabButton = (props) => {\r\n  const { activeTab, toggleTab, countPlaylists, countVideos } = props;\r\n  const buttons = [\r\n    { name: \"Upload\", tab: \"3\" },\r\n    { name: \"Playlists\", tab: \"1\", total: countPlaylists },\r\n    { name: \"Videos\", tab: \"2\", total: countVideos },\r\n  ];\r\n  return (\r\n    <Nav className=\"border-0 navi\" vertical>\r\n      {buttons.map((b, index) => {\r\n        return (\r\n          <NavItem\r\n            key={index}\r\n            className={b.name === \"Upload\" ? \"w-100\"  : \"d-flex justify-content-between align-items-baseline\"}\r\n          >\r\n            <NavLink\r\n              className=\"px-0\"\r\n              className={classnames({\r\n                active: activeTab === b.tab,\r\n              })}\r\n              onClick={() => {\r\n                toggleTab(b.tab);\r\n              }}\r\n            >\r\n              {b.name === \"Upload\" ? (\r\n                <Button className=\"w-100 mb-4\" color=\"success\">\r\n                  {b.name}\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  {\" \"}\r\n                  <i className=\"dripicons-star mr-2\"></i> {b.name}\r\n                </>\r\n              )}\r\n            </NavLink>\r\n            {b.name === \"Upload\" ? null : <span>{b.total || 0}</span>}\r\n          </NavItem>\r\n        );\r\n      })}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default TabButton;","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\TabPanel.jsx",["410","411","412","413"],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Upload\\Upload.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Footer.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Navbar.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\Rightbar.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ApexRadial.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Header.jsx",["414"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showRightSidebarAction, toggleLeftmenu } from \"../../store/actions\";\r\nimport {\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport LanguageDropdown from \"../CommonForBoth/TopbarDropdown/LanguageDropdown\";\r\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\";\r\nimport logo from \"../../assets/images/bring-stream_logo-wite.png\";\r\nimport { connect } from \"react-redux\";\r\nimport Actions from \"../../store/actions\";\r\nimport selectors from \"../../selectors\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport \"./styles.scss\";\r\n\r\nconst Header = (props) => {\r\n  const [menu, setMenu] = useState(false);\r\n  const {\r\n    channels,\r\n    activeChannel,\r\n    setActiveChannel,\r\n    onGetChannels,\r\n    onGetPlaylist,\r\n  } = props;\r\n  const defaultChannel = JSON.parse(localStorage.getItem(\"channel\"));\r\n\r\n  useEffect(() => {\r\n    if (channels === null) {\r\n      onGetChannels();\r\n    }\r\n    if (defaultChannel !== activeChannel) {\r\n      onGetPlaylist({ id: defaultChannel?.id || \"1\", count: 0 });\r\n    }\r\n    setActiveChannel(defaultChannel);\r\n  }, [channels, activeChannel]);\r\n\r\n  function toggleFullscreen() {\r\n    if (\r\n      !document.fullscreenElement &&\r\n      /* alternative standard method */ !document.mozFullScreenElement &&\r\n      !document.webkitFullscreenElement\r\n    ) {\r\n      // current working methods\r\n      if (document.documentElement.requestFullscreen) {\r\n        document.documentElement.requestFullscreen();\r\n      } else if (document.documentElement.mozRequestFullScreen) {\r\n        document.documentElement.mozRequestFullScreen();\r\n      } else if (document.documentElement.webkitRequestFullscreen) {\r\n        document.documentElement.webkitRequestFullscreen(\r\n          Element.ALLOW_KEYBOARD_INPUT\r\n        );\r\n      }\r\n    } else {\r\n      if (document.cancelFullScreen) {\r\n        document.cancelFullScreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitCancelFullScreen) {\r\n        document.webkitCancelFullScreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  const mapChannelsSelect = () => {\r\n    if (channels === null || channels?.length === 0) {\r\n      return (\r\n        <Link to=\"/channels/create\">\r\n          <Button color=\"secondary\" outline className=\"waves-effect\">\r\n            <i className=\"bx bx-plus font-size-16 align-middle mr-2\" />\r\n            Creacte a new project\r\n          </Button>\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <Dropdown isOpen={menu} toggle={() => setMenu(!menu)}>\r\n            <DropdownToggle outline color=\"secondary\" caret>\r\n              {activeChannel?.name} <i className=\"mdi mdi-chevron-down\" />\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              {channels?.map((item) => (\r\n                <Link to=\"/dashboard\" key={item.id}>\r\n                  {\" \"}\r\n                  <DropdownItem\r\n                    onClick={() => {\r\n                      setActiveChannel(item);\r\n                      localStorage.setItem(\"channel\", JSON.stringify(item));\r\n                    }}\r\n                  >\r\n                    {item.name}\r\n                  </DropdownItem>\r\n                </Link>\r\n              ))}\r\n\r\n              <DropdownItem>\r\n                <Link to=\"/channels/create\">\r\n                  <i className=\"bx bx-plus font-size-16 align-middle mr-2\" />\r\n                  Creacte a new project\r\n                </Link>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          {activeChannel?.url_bs && (\r\n            <a\r\n              className=\"visite-site-link\"\r\n              href={activeChannel?.url_bs}\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <Button color=\"secondary\" outline className=\"btn-sm\">\r\n                Visit Site\r\n              </Button>\r\n            </a>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header id=\"page-topbar\">\r\n        <div className=\"navbar-header\">\r\n          <div className=\"d-flex\">\r\n            <div className=\"navbar-brand-box\">\r\n              <Link to=\"/dashboard\" className=\"logo\">\r\n                <img src={logo} alt=\"\" />\r\n              </Link>\r\n            </div>\r\n\r\n            {/* Mobile menu button */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm px-3 font-size-16 d-lg-none header-item waves-effect waves-light\"\r\n              data-toggle=\"collapse\"\r\n              onClick={() => {\r\n                props.toggleLeftmenu(!props.leftMenu);\r\n              }}\r\n              data-target=\"#topnav-menu-content\"\r\n            >\r\n              <i className=\"fa fa-fw fa-bars\"></i>\r\n            </button>\r\n\r\n            <div className=\"header-buttons-wrapper\">{mapChannelsSelect()}</div>\r\n          </div>\r\n\r\n          <div className=\"d-flex\">\r\n            <LanguageDropdown />\r\n\r\n            <div className=\"dropdown d-none d-lg-inline-block ml-1\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn header-item noti-icon waves-effect\"\r\n                onClick={() => {\r\n                  toggleFullscreen();\r\n                }}\r\n                data-toggle=\"fullscreen\"\r\n              >\r\n                <i className=\"bx bx-fullscreen\"></i>\r\n              </button>\r\n            </div>\r\n\r\n            <ProfileMenu />\r\n\r\n            {/* <div className=\"dropdown d-inline-block\">\r\n                <button\r\n                  onClick={() => { props.showRightSidebarAction(!props.showRightSidebar); }}\r\n                  type=\"button\"\r\n                  className=\"btn header-item noti-icon right-bar-toggle waves-effect\" >\r\n                  <i className=\"bx bx-cog bx-spin\"></i>\r\n                </button>\r\n              </div> */}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  const { layoutType, showRightSidebar, leftMenu } = state.Layout;\r\n  return {\r\n    layoutType,\r\n    showRightSidebar,\r\n    leftMenu,\r\n    channels: selectors.channels.channels(state),\r\n    activeChannel: selectors.channels.activeChannel(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  showRightSidebarAction: (value) => dispatch(showRightSidebarAction(value)),\r\n  toggleLeftmenu: (value) => dispatch(toggleLeftmenu(value)),\r\n  onGetChannels: () => dispatch(Actions.channels.getChannelsRequest()),\r\n  setActiveChannel: (data) => dispatch(Actions.channels.setActiveChannel(data)),\r\n  onGetPlaylist: (data) =>\r\n    dispatch(Actions.playlists.getPlaylistsRequest(data)),\r\n});\r\n\r\nexport default connect(\r\n  mapStatetoProps,\r\n  mapDispatchToProps\r\n)(withNamespaces()(Header));\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\languages\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\layout\\actionTypes.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\playlists\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\channels\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\videos\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\profile\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\common\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\store\\authorization\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\CheckItems.jsx",["415","416","417","418"],"import React, { useState } from \"react\";\r\nimport { Form, Label, Input } from \"reactstrap\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport { axiosInstance } from \"../../../helpers/api/index\";\r\nimport { sha1 } from \"../../../helpers/sha1\";\r\n\r\n\r\nconst CheckItems = (props) => {\r\n  const {\r\n    updateItems,\r\n    items,\r\n    checkedItems,\r\n    setChekedItems,\r\n    handleOnDragEnd,\r\n    handleChange,\r\n    characters,\r\n    toEdit,\r\n  } = props;\r\n\r\n  const [orderByValue, setOrderByValue] = useState(0);\r\n  const [videoId, setVideoId] = useState(0);\r\n  const [playlistId, setPlaylistId] = useState(0);\r\n\r\n  let allItems = [];\r\n  for (let str of items) {\r\n    if (!allItems.includes(str)) {\r\n      allItems.push(str);\r\n    }\r\n  };\r\n\r\n  // set input data when changed\r\n  const onOrderbyClick = (orderByValue, video_id, playlist_id) => {\r\n    setOrderByValue(Number(orderByValue));\r\n    setVideoId(video_id);\r\n    setPlaylistId(playlist_id || 1);\r\n  };\r\n\r\n  // Sort items by property\r\n  function dynamicSort(property) {\r\n    const sortOrder = 1;\r\n    if (property[0] === \"-\") {\r\n      sortOrder = -1;\r\n      property = property.substr(1);\r\n    }\r\n    return function (a, b) {\r\n      const result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\r\n      return result * sortOrder;\r\n    }\r\n  }\r\n\r\n  const sortedItems = items.sort(dynamicSort(\"orderby\"));\r\n\r\n  const ChangeVideoOrder = async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n    const queryString = `action=ChangeVideoOrder&openKey=${authData.openKey}`;\r\n    const jsonData = JSON.stringify(data);\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"jsonData\", jsonData);\r\n    formData.append('signature', signature)\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    return await axiosInstance\r\n      .post(`?${queryString}`, formData, config)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => ({ error }));\r\n  };\r\n\r\n  // save order number by Enter press\r\n  const onEnterPress = (event) => {\r\n    if (event.keyCode == 13) {\r\n      ChangeVideoOrder({\r\n        playlist_id: playlistId,\r\n        video_id: videoId,\r\n        orderby: orderByValue,\r\n      })\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Form>\r\n      <DragDropContext\r\n        onDragEnd={(e) => handleOnDragEnd(e, sortedItems, updateItems)}\r\n      >\r\n        <Droppable droppableId=\"characters\">\r\n          {(provided) => (\r\n            <ul\r\n              className=\"message-list characters\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {sortedItems &&\r\n                sortedItems ?.map((p, index) => {\r\n                  const element = (p.duration / 3600).toString().split(\"\");\r\n                  const minutes = element.splice(0, 1).join(\"\");\r\n                  const seconds = element.splice(1, 2);\r\n\r\n                  return (\r\n                    <Draggable\r\n                      key={p.id}\r\n                      draggableId={String(p.name)}\r\n                      index={index}\r\n                    >\r\n                      {(provided) => (\r\n                        <li\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          <Label className=\"check d-flex align-items-center ml-4\">\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              name={p.name}\r\n                              checked={checkedItems.includes(p.id)}\r\n                              onChange={() =>\r\n                                handleChange(p, checkedItems, setChekedItems)\r\n                              }\r\n                            />\r\n\r\n                            {sortedItems !== characters &&\r\n                              <input\r\n                                className=\"videosOrderNumber\"\r\n                                type=\"text\"\r\n                                checked={checkedItems.includes(p.id)}\r\n                                defaultValue={p.orderby}\r\n                                onChange={(event) => onOrderbyClick(event.target.value, p.id, p.playlist_id)}\r\n                                onKeyDown={(event) => onEnterPress(event)}\r\n                              />\r\n                            }\r\n\r\n                            {sortedItems === characters ? (\r\n                              <>\r\n                                {\" \"}\r\n                                <span\r\n                                  id=\"editPlaylist\"\r\n                                  onClick={(e) => toEdit(p, e.currentTarget.id)}\r\n                                >\r\n                                  {p.name}{\" \"}\r\n                                </span>\r\n                              </>\r\n                            ) : (\r\n                                <>\r\n                                  {\" \"}\r\n                                  <img\r\n                                    src={JSON.parse(p.pictures)[\"100\"]}\r\n                                    className=\"picture\"\r\n                                    alt=\"img\"\r\n                                  />\r\n                                  <span\r\n                                    id=\"editVideo\"\r\n                                    onClick={(e) => toEdit(p, e.currentTarget.id)}\r\n                                  >\r\n                                    {p.vimeo_name}{\" \"}\r\n                                  </span>\r\n                                </>\r\n                              )}\r\n                            <div className=\"col-mail col-mail-2\">\r\n                              <div className=\"date\">\r\n                                {sortedItems === characters ? (\r\n                                  `${p ?.videos_count} items`\r\n                                ) : (\r\n                                    <>\r\n                                      {minutes}:\r\n                                    {seconds.length === 0 ? \"00\" : seconds}{\" \"}\r\n                                    </>\r\n                                  )}\r\n                              </div>\r\n                            </div>\r\n                          </Label>\r\n                        </li>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n              {provided.placeholder}\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CheckItems;\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\CreateEdit.jsx",["419"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../content.scss\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  FormGroup,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\r\nimport LanguagesTabs from \"./LanguagesTabs\";\r\nimport FormaData from \"./FormaData\";\r\nimport { Prompt } from \"react-router\";\r\n\r\nconst CreateEdit = (props) => {\r\n  // Get props\r\n  const {\r\n    onAddPlaylist,\r\n    onUpdatePlaylist,\r\n    defaultChannel,\r\n    setChangePage,\r\n    onGetPlaylist,\r\n    valueButton,\r\n    checkName,\r\n    setCheckName,\r\n    modalSave,\r\n    editName,\r\n    setEditName,\r\n    editDescription,\r\n    setEditDescription,\r\n    setChekedItems,\r\n    setModalSave,\r\n    checkedItems,\r\n    setCheckDesc,\r\n    onUpdateVideo,\r\n    onAddVideoToPlaylist,\r\n    onGetVideosByPlaylist,\r\n    getPlaylist,\r\n    characters,\r\n    setSelectedPage,\r\n    checkId,\r\n  } = props;\r\n  // State local\r\n  const [require, setRequire] = useState(false);\r\n  const [playlistId, setPlaylistId] = useState(characters[0]?.id);\r\n\r\n  function onSubmit() {\r\n    if (editName === \"\" || editDescription === \"\") {\r\n      setRequire(true);\r\n    } else {\r\n      switch (valueButton) {\r\n        case \"editPlaylist\":\r\n          onUpdatePlaylist({ id: checkId, name: editName });\r\n          setTimeout(() => {\r\n            onGetPlaylist({ id: defaultChannel.id, count: 0 });\r\n          }, 1000);\r\n          break;\r\n        case \"newPlaylist\":\r\n          onAddPlaylist({\r\n            name: editName,\r\n            description: editDescription,\r\n            channel_id: defaultChannel.id,\r\n          });\r\n          setTimeout(() => {\r\n            onGetPlaylist({ id: defaultChannel.id, count: 0 });\r\n          }, 1000);\r\n          break;\r\n        case \"editVideo\":\r\n          onUpdateVideo({ id: checkId, name: editName });\r\n          setTimeout(() => {\r\n            onGetVideosByPlaylist({\r\n              id: getPlaylist,\r\n              channel: defaultChannel?.id,\r\n              count: 0,\r\n            });\r\n          }, 1000);\r\n          break;\r\n        case \"newVideo\":\r\n          onAddVideoToPlaylist({\r\n            playlist_id: playlistId,\r\n            video_id: checkId,\r\n          });\r\n          setTimeout(() => {\r\n            onGetVideosByPlaylist({\r\n              id: getPlaylist,\r\n              channel: defaultChannel?.id,\r\n              count: 0,\r\n            });\r\n          }, 1000);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      setCheckName(\"\");\r\n      setCheckDesc(\"\");\r\n      setEditName(\"\");\r\n      setEditDescription(\"\");\r\n      setChangePage(false);\r\n      setChekedItems([]);\r\n      setSelectedPage(1);\r\n    }\r\n  }\r\n\r\n  const toggleSave = () => {\r\n    setModalSave(!modalSave);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (checkName !== editName) {\r\n      window.onbeforeunload = () => true;\r\n    } else {\r\n      window.onbeforeunload = undefined;\r\n    }\r\n  }, [checkName, editName]);\r\n\r\n  return (\r\n    <Card>\r\n      <Prompt\r\n        when={checkName !== editName}\r\n        message=\"You have unsaved data. You want to leave the page?\"\r\n      />\r\n      <AvForm onValidSubmit={onSubmit}>\r\n        <CardBody>\r\n          {/* Toggle languages */}\r\n          <LanguagesTabs />\r\n          {/* Form group with validation */}\r\n          <FormaData\r\n            {...{\r\n              valueButton,\r\n              editName,\r\n              setEditName,\r\n              editDescription,\r\n              setPlaylistId,\r\n              setEditDescription,\r\n              characters,\r\n              require,\r\n            }}\r\n          />\r\n        </CardBody>\r\n        <CardBody>\r\n          <CardTitle>Meta Data</CardTitle>\r\n          <CardSubtitle className=\"mb-3\">\r\n            Fill all information below\r\n          </CardSubtitle>\r\n          {/* Form group without validation */}\r\n          <FormGroup>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <AvField\r\n                  id=\"metatitle\"\r\n                  label=\"Meta title\"\r\n                  name=\"productname\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n                <AvField\r\n                  label=\"Meta Keyword\"\r\n                  id=\"metakeywords\"\r\n                  name=\"manufacturername\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </Col>\r\n\r\n              <Col sm={6}>\r\n                <AvField\r\n                  label=\"Meta Description\"\r\n                  type=\"textarea\"\r\n                  className=\"form-control\"\r\n                  id=\"metadescription\"\r\n                  name=\"Meta Description\"\r\n                  rows=\"5\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              className=\"mr-1 waves-effect waves-light\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setChekedItems([]);\r\n                setChangePage(false);\r\n                setCheckName(\"\");\r\n                setCheckDesc(\"\");\r\n                setEditName(\"\");\r\n                setEditDescription(\"\");\r\n              }}\r\n              type=\"button\"\r\n              color=\"secondary\"\r\n              className=\"waves-effect\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </FormGroup>\r\n          <Modal isOpen={modalSave} toggle={toggleSave}>\r\n            <ModalHeader toggle={toggleSave}>Are you sure?</ModalHeader>\r\n            <ModalBody>\r\n              You have unsaved data. You want to leave the page?\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" className=\"w-sm\" onClick={toggleSave}>\r\n                Cancel\r\n              </Button>\r\n              <Button color=\"danger\" className=\"w-sm\" onClick={onSubmit}>\r\n                Save Changes\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </CardBody>\r\n      </AvForm>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CreateEdit;\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\DeleteModal.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\EmptyMessage.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Pagination\\Pagination.jsx",["420"],"import React, { useEffect } from \"react\";\r\nimport PaginationComponent from \"react-reactstrap-pagination\";\r\n\r\nconst PaginationVideos = (props) => {\r\n  const {\r\n    countVideos,\r\n    onGetVideos,\r\n    updateDragVideo,\r\n    videos,\r\n    selectedPage,\r\n    setSelectedPage,\r\n    defaultChannel,\r\n    onGetPlaylist,\r\n    countPlaylists,\r\n    activeTab,\r\n    getPlaylist,\r\n    onGetVideosByPlaylist,\r\n    countVideosByPlaylist,\r\n    videosByPlaylist\r\n  } = props;\r\n\r\n  const handleSelected = (page) => {\r\n    if(activeTab === \"1\") {\r\n      onGetPlaylist( {id: defaultChannel?.id, count: ((page - 1) * 25)});\r\n      setSelectedPage(page);\r\n    } else {\r\n      if(getPlaylist === null) {\r\n        onGetVideos( {id: defaultChannel?.id, count: ((page - 1) * 25)});\r\n        setSelectedPage(page);\r\n      } else {\r\n        onGetVideosByPlaylist( {id: getPlaylist?.id, channel: defaultChannel?.id, count: ((page - 1) * 25)});\r\n        setSelectedPage(page);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedPage) {\r\n      if(getPlaylist === null) {\r\n        updateDragVideo(videos);\r\n      } else {\r\n        updateDragVideo(videosByPlaylist)\r\n      }\r\n    }\r\n  }, [selectedPage, videos]);\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <PaginationComponent\r\n        totalItems={activeTab === \"1\" ? countPlaylists : getPlaylist === null ? countVideos : countVideosByPlaylist}\r\n        pageSize={25}\r\n        onSelect={handleSelected}\r\n        defaultActivePage={selectedPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationVideos;","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\ButtonsAPI\\ButtonsAPIVideo.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\ButtonsAPI\\ButtonsAPIPlaylist.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\authorization\\index.js",["421"],"import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst authorization = createSelector(selector, data => data.authorization)\r\nconst authData = deepEqualSelector(authorization, data => data.authData)\r\n\r\nexport default {\r\n  authData,\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\profile\\index.js",["422"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst profile = deepEqualSelector(selector, data => data.profile)\r\nconst user = deepEqualSelector(profile, data => data.user)\r\n\r\nexport default {\r\n  user,\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\common\\index.js",["423"],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\languages\\index.js",["424"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from \"../common\";\r\n\r\nconst self = deepEqualSelector(selector, (data) => data.languages);\r\nconst languages = deepEqualSelector(self, (data) => data.languages);\r\n\r\nexport default {\r\n  languages,\r\n};","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\videos\\index.js",["425"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from \"../common\";\r\n\r\nconst self = deepEqualSelector(selector, (data) => data.videos);\r\nconst videos = deepEqualSelector(self, (data) => data.videos);\r\nconst videosByPlaylist = deepEqualSelector(\r\n  self,\r\n  (data) => data.videosByPlaylist\r\n);\r\nconst countVideos = deepEqualSelector(self, (data) => data.countVideos);\r\nconst countVideosByPlaylist = deepEqualSelector(self, (data) => data.countVideosByPlaylist)\r\n\r\nexport default {\r\n  videos,\r\n  countVideos,\r\n  videosByPlaylist,\r\n  countVideosByPlaylist\r\n};\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\playlists\\index.js",["426"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from \"../common\";\r\n\r\nconst self = deepEqualSelector(selector, (data) => data.playlists);\r\nconst playlists = deepEqualSelector(self, (data) => data.playlists);\r\nconst onePlaylist = deepEqualSelector(self, (data) => data.onePlaylist);\r\nconst count = deepEqualSelector(self, (data) => data.count);\r\n\r\nexport default {\r\n  playlists,\r\n  onePlaylist,\r\n  count,\r\n};","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\selectors\\channels\\index.js",["427"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst self = deepEqualSelector(selector, data => data.channels)\r\nconst channels = deepEqualSelector(self, data => data.channels)\r\nconst activeChannel = deepEqualSelector(self, data => data.activeChannel)\r\nconst isChannelAddedSuccessfuly = deepEqualSelector(self, data => data.isChannelAddedSuccessfuly)\r\n\r\nexport default {\r\n  channels,\r\n  activeChannel,\r\n  isChannelAddedSuccessfuly,\r\n}","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\index.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.jsx",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\sha1.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\FormaData.jsx",["428","429"],"import React, { useState } from \"react\";\r\nimport { AvField } from \"availity-reactstrap-validation\";\r\nimport {\r\n  FormGroup,\r\n} from \"reactstrap\";\r\n\r\nconst FormaData = (props) => {\r\n  const {\r\n    valueButton,\r\n    editName,\r\n    setEditName,\r\n    editDescription,\r\n    setPlaylistId,\r\n    setEditDescription,\r\n    characters,\r\n    require,\r\n  } = props;\r\n\r\n  // On submit\r\n  const getPlailistId = (e) => {\r\n    const name = e.target.value;\r\n    const arr = characters?.filter((c) => c.name == name);\r\n    const id = arr[0]?.id;\r\n    setPlaylistId(id);\r\n  };\r\n\r\n  // Modal window (Save changes)\r\n\r\n  // On chnage global function\r\n  const onChanged = (setName) => (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormGroup className=\"w-50 mt-4\">\r\n      <AvField\r\n        name=\"title\"\r\n        className=\"form-control\"\r\n        placeholder=\"title\"\r\n        type=\"text\"\r\n        required={require}\r\n        label=\"Title\"\r\n        value={editName}\r\n        onChange={onChanged(setEditName)}\r\n      />\r\n      <AvField\r\n        className=\"form-control\"\r\n        type=\"textarea\"\r\n        rows=\"5\"\r\n        label=\"Description\"\r\n        name=\"description\"\r\n        required={require}\r\n        placeholder=\"description\"\r\n        value={editDescription}\r\n        onChange={onChanged(setEditDescription)}\r\n      />\r\n      {valueButton === \"editVideo\" || valueButton === \"newVideo\" ? (\r\n        <AvField\r\n          type=\"select\"\r\n          name=\"select\"\r\n          label=\"Chose playlist\"\r\n          onChange={(e) => getPlailistId(e)}\r\n        >\r\n          {characters?.map((c) => {\r\n            return (\r\n              <option\r\n                key={c.id}\r\n                value={c.name}\r\n              >\r\n                {c.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </AvField>\r\n      ) : null}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default FormaData;\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\LanguagesTabs.jsx",["430"],"import React, { useState, useEffect } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nconst LanguagesTabs = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  // const [lng, setLng] = useState(\"eng\");\r\n  const [langs, setLangs] = useState([]);\r\n  const defaultLang = JSON.parse(localStorage.getItem(\"channelLangs\"));\r\n\r\n  // On toggle languages\r\n  const toggleCustomJustified = (tab) => {\r\n    if (activeTab !== tab) {\r\n      setActiveTab(tab);\r\n    }\r\n  };\r\n\r\n  // Side effects\r\n  useEffect(() => {\r\n    // i18n.changeLanguage(lng);\r\n      setLangs(defaultLang);\r\n  }, []);\r\n\r\n  return (\r\n    <TabContent>\r\n      <TabPane>\r\n        <Nav tabs className=\"nav-tabs-custom nav-justified\">\r\n          {langs?.map((item, index) => {\r\n            const num = index + 1;\r\n            return (\r\n              <NavItem key={index}>\r\n                <NavLink\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className={classnames({\r\n                    active: activeTab === num.toString(),\r\n                  })}\r\n                  onClick={() => {\r\n                    //setLng(\"rs\");\r\n                    toggleCustomJustified(num.toString());\r\n                  }}\r\n                >\r\n                  <span className=\"d-none d-sm-block\">{item}</span>\r\n                </NavLink>\r\n              </NavItem>\r\n            );\r\n          })}\r\n        </Nav>\r\n        {/* Buttons fot toggle */}\r\n        <TabContent activeTab={activeTab}>\r\n          {langs?.map((item, index) => {\r\n            return <TabPane key={index} tabId={index + 1} className=\"p-3\"></TabPane>;\r\n          })}\r\n        </TabContent>\r\n      </TabPane>\r\n    </TabContent>\r\n  );\r\n};\r\n\r\nexport default LanguagesTabs;\r\n","F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\videos.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\languages.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\playlists.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\profile.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\channels.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\api\\authorization.js",[],"F:\\Програмування\\working\\bringstream\\channel-admin-test\\src\\helpers\\loader.js",[],{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"436","line":53,"column":41,"nodeType":"437","messageId":"438","endLine":53,"endColumn":43},{"ruleId":"435","severity":1,"message":"436","line":53,"column":73,"nodeType":"437","messageId":"438","endLine":53,"endColumn":75},{"ruleId":"439","severity":1,"message":"440","line":56,"column":5,"nodeType":"441","endLine":56,"endColumn":15,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":11,"column":1,"nodeType":"445","endLine":19,"endColumn":2},{"ruleId":"439","severity":1,"message":"446","line":28,"column":6,"nodeType":"441","endLine":28,"endColumn":36,"suggestions":"447"},{"ruleId":"448","severity":1,"message":"449","line":32,"column":43,"nodeType":"450","messageId":"451","endLine":32,"endColumn":64},{"ruleId":"439","severity":1,"message":"452","line":88,"column":19,"nodeType":"453","endLine":88,"endColumn":67},{"ruleId":"439","severity":1,"message":"454","line":170,"column":6,"nodeType":"441","endLine":170,"endColumn":21,"suggestions":"455"},{"ruleId":"439","severity":1,"message":"456","line":32,"column":5,"nodeType":"441","endLine":32,"endColumn":46,"suggestions":"457"},{"ruleId":"443","severity":1,"message":"444","line":24,"column":1,"nodeType":"445","endLine":28,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":82,"column":1,"nodeType":"445","endLine":95,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":51,"column":1,"nodeType":"445","endLine":59,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":29,"column":1,"nodeType":"445","endLine":34,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":55,"column":1,"nodeType":"445","endLine":64,"endColumn":3},{"ruleId":"443","severity":1,"message":"444","line":55,"column":1,"nodeType":"445","endLine":64,"endColumn":3},{"ruleId":"443","severity":1,"message":"444","line":29,"column":1,"nodeType":"445","endLine":34,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":9,"column":1,"nodeType":"445","endLine":17,"endColumn":2},{"ruleId":"448","severity":1,"message":"458","line":4,"column":10,"nodeType":"450","messageId":"451","endLine":4,"endColumn":17},{"ruleId":"448","severity":1,"message":"459","line":5,"column":8,"nodeType":"450","messageId":"451","endLine":5,"endColumn":17},{"ruleId":"460","severity":1,"message":"461","line":22,"column":15,"nodeType":"462","endLine":24,"endColumn":18},{"ruleId":"463","severity":1,"message":"464","line":74,"column":17,"nodeType":"465","messageId":"466","endLine":74,"endColumn":19},{"ruleId":"463","severity":1,"message":"464","line":83,"column":19,"nodeType":"465","messageId":"466","endLine":83,"endColumn":21},{"ruleId":"439","severity":1,"message":"467","line":95,"column":6,"nodeType":"441","endLine":95,"endColumn":56,"suggestions":"468"},{"ruleId":"469","severity":1,"message":"470","line":125,"column":15,"nodeType":"471","messageId":"466","endLine":125,"endColumn":24},{"ruleId":"439","severity":1,"message":"472","line":39,"column":6,"nodeType":"441","endLine":39,"endColumn":31,"suggestions":"473"},{"ruleId":"474","severity":1,"message":"475","line":43,"column":7,"nodeType":"450","messageId":"476","endLine":43,"endColumn":16},{"ruleId":"463","severity":1,"message":"464","line":82,"column":23,"nodeType":"465","messageId":"466","endLine":82,"endColumn":25},{"ruleId":"477","severity":1,"message":"478","line":105,"column":17,"nodeType":"479","messageId":"480","endLine":105,"endColumn":34,"fix":"481"},{"ruleId":"477","severity":1,"message":"482","line":172,"column":38,"nodeType":"479","messageId":"480","endLine":172,"endColumn":54,"fix":"483"},{"ruleId":"448","severity":1,"message":"484","line":40,"column":5,"nodeType":"450","messageId":"451","endLine":40,"endColumn":17},{"ruleId":"439","severity":1,"message":"485","line":45,"column":6,"nodeType":"441","endLine":45,"endColumn":28,"suggestions":"486"},{"ruleId":"443","severity":1,"message":"444","line":7,"column":1,"nodeType":"445","endLine":9,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":7,"column":1,"nodeType":"445","endLine":9,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":15,"column":1,"nodeType":"445","endLine":19,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":7,"column":1,"nodeType":"445","endLine":9,"endColumn":3},{"ruleId":"443","severity":1,"message":"444","line":13,"column":1,"nodeType":"445","endLine":18,"endColumn":3},{"ruleId":"443","severity":1,"message":"444","line":9,"column":1,"nodeType":"445","endLine":13,"endColumn":3},{"ruleId":"443","severity":1,"message":"444","line":9,"column":1,"nodeType":"445","endLine":13,"endColumn":2},{"ruleId":"448","severity":1,"message":"487","line":1,"column":17,"nodeType":"450","messageId":"451","endLine":1,"endColumn":25},{"ruleId":"463","severity":1,"message":"464","line":22,"column":50,"nodeType":"465","messageId":"466","endLine":22,"endColumn":52},{"ruleId":"439","severity":1,"message":"488","line":22,"column":6,"nodeType":"441","endLine":22,"endColumn":8,"suggestions":"489"},"no-native-reassign",["490"],"no-negated-in-lhs",["491"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'lastLoactionPathname'. Either include them or remove the dependency array.","ArrayExpression",["492"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'hash', 'isSent', and 'onSendNewPassword'. Either include them or remove the dependency array.",["493"],"no-unused-vars","'onGetChannelLanguages' is assigned a value but never used.","Identifier","unusedVar","Assignments to the 'defaultLang' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'defaultChannel'. Either include it or remove the dependency array.",["494"],"React Hook useEffect has missing dependencies: 'history' and 'resetIsChannelAddedValue'. Either include them or remove the dependency array.",["495"],"'history' is defined but never used.","'selectors' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'characters', 'checkName', 'defaultChannel?.id', 'dragVIdeo', 'editName', 'onGetPlaylist', 'onGetVideos', 'setLoader', 'updateCharacters', and 'updateDragVideo'. Either include them or remove the dependency array.",["496"],"no-dupe-keys","Duplicate key 'checkName'.","ObjectExpression","React Hook useEffect has missing dependencies: 'defaultChannel', 'onGetChannels', 'onGetPlaylist', and 'setActiveChannel'. Either include them or remove the dependency array.",["497"],"no-const-assign","'sortOrder' is constant.","const","no-whitespace-before-property","Unexpected whitespace before property map.","MemberExpression","unexpectedWhitespace",{"range":"498","text":"499"},"Unexpected whitespace before property videos_count.",{"range":"500","text":"499"},"'checkedItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPlaylist', 'updateDragVideo', and 'videosByPlaylist'. Either include them or remove the dependency array.",["501"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'defaultLang'. Either include it or remove the dependency array.",["502"],"no-global-assign","no-unsafe-negation",{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},[2948,2951],"?.",[6147,6150],{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},"Update the dependencies array to be: [channels, history, lastLoactionPathname]",{"range":"519","text":"520"},"Update the dependencies array to be: [successMessage, errorMessage, hash, isSent, onSendNewPassword]",{"range":"521","text":"522"},"Update the dependencies array to be: [activeChannel, defaultChannel]",{"range":"523","text":"524"},"Update the dependencies array to be: [errorMessgae, history, isChannelAddedSuccessfuly, resetIsChannelAddedValue]",{"range":"525","text":"526"},"Update the dependencies array to be: [playlists, videosByPlaylist, videos, getPlaylist, characters, checkName, editName, onGetPlaylist, defaultChannel?.id, updateCharacters, dragVIdeo, updateDragVideo, onGetVideos, setLoader]",{"range":"527","text":"528"},"Update the dependencies array to be: [channels, activeChannel, defaultChannel, setActiveChannel, onGetChannels, onGetPlaylist]",{"range":"529","text":"530"},"Update the dependencies array to be: [getPlaylist, selectedPage, updateDragVideo, videos, videosByPlaylist]",{"range":"531","text":"532"},"Update the dependencies array to be: [defaultLang]",{"range":"533","text":"534"},[1807,1817],"[channels, history, lastLoactionPathname]",[1033,1063],"[successMessage, errorMessage, hash, isSent, onSendNewPassword]",[5089,5104],"[activeChannel, defaultChannel]",[913,954],"[errorMessgae, history, isChannelAddedSuccessfuly, resetIsChannelAddedValue]",[2322,2372],"[playlists, videosByPlaylist, videos, getPlaylist, characters, checkName, editName, onGetPlaylist, defaultChannel?.id, updateCharacters, dragVIdeo, updateDragVideo, onGetVideos, setLoader]",[1221,1246],"[channels, activeChannel, defaultChannel, setActiveChannel, onGetChannels, onGetPlaylist]",[1165,1187],"[getPlaylist, selectedPage, updateDragVideo, videos, videosByPlaylist]",[663,665],"[defaultLang]"]